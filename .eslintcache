[{"/home/cxcorp/Projects/cyber-nn-trainer/src/index.tsx":"1","/home/cxcorp/Projects/cyber-nn-trainer/src/App.tsx":"2","/home/cxcorp/Projects/cyber-nn-trainer/src/pretrains.ts":"3"},{"size":219,"mtime":1608508517580,"results":"4","hashOfConfig":"5"},{"size":17724,"mtime":1608581221647,"results":"6","hashOfConfig":"5"},{"size":20245,"mtime":1608512833310,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"h9fo7q",{"filePath":"11","messages":"12","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"13","usedDeprecatedRules":"10"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16","usedDeprecatedRules":"17"},"/home/cxcorp/Projects/cyber-nn-trainer/src/index.tsx",[],["18","19"],"/home/cxcorp/Projects/cyber-nn-trainer/src/App.tsx",["20","21","22","23","24","25","26","27","28","29"],"import React, {\n  useCallback,\n  useState,\n  useRef,\n  useEffect,\n  useMemo,\n} from \"react\";\n\nimport maxBy from \"lodash/maxBy\";\n\nimport \"@tensorflow/tfjs-backend-webgl\";\nimport \"@tensorflow/tfjs-backend-cpu\";\nimport \"@tensorflow/tfjs-backend-wasm\";\nimport TF from \"@tensorflow/tfjs\";\nimport * as KNNClassifier from \"@tensorflow-models/knn-classifier\";\nimport * as MobileNet from \"@tensorflow-models/mobilenet\";\n\nimport \"react-dropzone-uploader/dist/styles.css\";\nimport Dropzone from \"react-dropzone-uploader\";\n\nimport tilesJson from \"./tiles.json\";\nimport tests from \"./tests.json\";\nimport pretrains from \"./pretrains\";\nimport \"./App.css\";\n\nimport pixelsJson from \"./pixels.json\";\nconst pixels = pixelsJson as { tile: string; pixels: number[][] }[];\n\ninterface LabelableImageProps {\n  i: number;\n  src: string;\n  onClick: (i: number) => void;\n  background?: string;\n}\n\nconst LabelableImage = ({\n  onClick,\n  i,\n  src,\n  background,\n}: LabelableImageProps) => {\n  const handleclick = useCallback(() => {\n    onClick(i);\n  }, [i, onClick]);\n  return (\n    <div\n      style={{ background: background || \"white\" }}\n      className=\"labelable-image\"\n      onClick={handleclick}\n    >\n      <img src={src} />\n    </div>\n  );\n};\n\nconst tiles = tilesJson as string[];\nconst testTiles = [\n  \"Cyberpunk-hacking-minigame-3-1212x682-0.bmp\",\n  \"Cyberpunk-hacking-minigame-3-1212x682-1.bmp\",\n  \"Cyberpunk-hacking-minigame-3-1212x682-10.bmp\",\n  \"Cyberpunk-hacking-minigame-3-1212x682-11.bmp\",\n  \"Cyberpunk-hacking-minigame-3-1212x682-12.bmp\",\n  \"Cyberpunk-hacking-minigame-3-1212x682-13.bmp\",\n  \"Cyberpunk-hacking-minigame-3-1212x682-14.bmp\",\n  \"Cyberpunk-hacking-minigame-3-1212x682-15.bmp\",\n  \"Cyberpunk-hacking-minigame-3-1212x682-16.bmp\",\n  \"Cyberpunk-hacking-minigame-3-1212x682-17.bmp\",\n  \"Cyberpunk-hacking-minigame-3-1212x682-18.bmp\",\n  \"Cyberpunk-hacking-minigame-3-1212x682-19.bmp\",\n  \"Cyberpunk-hacking-minigame-3-1212x682-2.bmp\",\n  \"Cyberpunk-hacking-minigame-3-1212x682-20.bmp\",\n  \"Cyberpunk-hacking-minigame-3-1212x682-21.bmp\",\n  \"Cyberpunk-hacking-minigame-3-1212x682-22.bmp\",\n  \"Cyberpunk-hacking-minigame-3-1212x682-23.bmp\",\n  \"Cyberpunk-hacking-minigame-3-1212x682-24.bmp\",\n  \"Cyberpunk-hacking-minigame-3-1212x682-3.bmp\",\n  \"Cyberpunk-hacking-minigame-3-1212x682-4.bmp\",\n  \"Cyberpunk-hacking-minigame-3-1212x682-5.bmp\",\n  \"Cyberpunk-hacking-minigame-3-1212x682-6.bmp\",\n  \"Cyberpunk-hacking-minigame-3-1212x682-7.bmp\",\n  \"Cyberpunk-hacking-minigame-3-1212x682-8.bmp\",\n  \"Cyberpunk-hacking-minigame-3-1212x682-9.bmp\",\n].map((f) => `/testfiles/${f}`); //tests as string[];\n\ntype Opt = \"55\" | \"7A\" | \"BD\" | \"1C\" | \"E9\";\nconst opts: Opt[] = [\"55\", \"7A\", \"BD\", \"1C\", \"E9\"];\nconst colors = [\"#3498db\", \"#9b59b6\", \"#e74c3c\", \"#e67e22\", \"#f1c40f\"];\nconst optToColor: Record<Opt, string> = opts.reduce((acc, val, i) => {\n  acc[val] = colors[i];\n  return acc;\n}, {} as Record<Opt, string>);\n\nconst OptBtn = ({\n  opt,\n  i,\n  onClick,\n  children,\n  current,\n}: {\n  opt: string;\n  i: number;\n  onClick: (i: number) => void;\n  current: boolean;\n  children: React.ReactChild;\n}) => {\n  const hc = useCallback(() => {\n    onClick(i);\n  }, [onClick, i]);\n  return (\n    <button\n      style={{ background: current ? \"white\" : colors[i] }}\n      key={opt}\n      onClick={hc}\n      className=\"control-btn\"\n    >\n      {children}\n    </button>\n  );\n};\n\nconst getLabelIdxToOptIdxInitialState = (): {\n  [i: number]: number | undefined;\n} => {\n  return pretrains.reduce((acc, curr) => {\n    const { img, opt } = curr;\n    return { ...acc, [tiles.indexOf(img)]: opts.indexOf(opt as Opt) };\n  }, {});\n};\n\nconst imgToColumnSum = (imgSrc: string): Promise<number[]> => {\n  return new Promise((resolve, reject) => {\n    const img = document.createElement(\"img\");\n    img.src = imgSrc;\n\n    img.onload = () => {\n      const canvas = document.createElement(\"canvas\");\n      canvas.width = img.width;\n      canvas.height = img.height;\n\n      const ctx = canvas.getContext(\"2d\")!;\n      ctx.drawImage(img, 0, 0);\n      document.body.removeChild(img);\n\n      const out: number[] = [];\n\n      const idata = ctx.getImageData(0, 0, img.width, img.height);\n      for (let y = 0; y < img.height; y++) {\n        let colSum = 0;\n        for (let x = 0; x < img.width; x += 4) {\n          const r = idata.data[y * (img.width * 4) + x * 4];\n          colSum += 255 - r;\n        }\n        out.push(colSum);\n      }\n\n      resolve(out);\n    };\n    img.onerror = (e) => {\n      reject(e);\n    };\n    document.body.appendChild(img);\n  });\n};\n\n/*\nconst imgToPixels = (imgSrc: string): Promise<number[][]> => {\n  return new Promise((resolve, reject) => {\n    const img = document.createElement(\"img\");\n    img.src = imgSrc;\n\n    img.onload = () => {\n      const canvas = document.createElement(\"canvas\");\n      canvas.width = img.width;\n      canvas.height = img.height;\n\n      const ctx = canvas.getContext(\"2d\")!;\n      ctx.drawImage(img, 0, 0);\n      document.body.removeChild(img);\n\n      const out: number[][] = new Array(img.height);\n\n      const idata = ctx.getImageData(0, 0, img.width, img.height);\n      for (let y = 0; y < img.height; y++) {\n        const row = new Array(img.width);\n        for (let x = 0; x < img.width; x++) {\n          row[x] =\n            255 -\n            Math.floor(\n              0.2126 * idata.data[y * (img.width * 4) + x * 4] +\n                0.7152 * idata.data[y * (img.width * 4) + (x + 1) * 4] +\n                0.0722 * idata.data[y * (img.width * 4) + (x + 2) * 4]\n            ) -\n            1;\n          if (isNaN(row[x])) {\n            row[x] = 0;\n          }\n        }\n        out[y] = row;\n      }\n\n      resolve(out);\n    };\n    img.onerror = (e) => {\n      reject(e);\n    };\n    document.body.appendChild(img);\n  });\n};\n\nconst dumpImgPixels = async () => {\n  const out: { tile: string; pixels: number[][] }[] = [];\n\n  let dump = true;\n  await Promise.all(\n    tiles.map(async (tile) => {\n      const pixels = await imgToPixels(tile);\n      out.push({ tile, pixels });\n    })\n  );\n\n  console.log(JSON.stringify(out));\n};\n\nconst calcColSumsForTiles = async (): Promise<{ [img: string]: number[] }> => {\n  const lookup: { [img: string]: number[] } = {};\n  let i = 0;\n  await Promise.all(\n    tiles.map(async (tile) => {\n      const coldata = await imgToColumnSum(tile);\n      console.log(`${i++}/${tiles.length}`);\n      lookup[tile] = coldata;\n    })\n  );\n  return lookup;\n};*/\n\ninterface VerifyImageProps {\n  label: string;\n  imgSrc: string;\n  color: string;\n}\nconst VerifyImage = ({ label, imgSrc, color }: VerifyImageProps) => {\n  return (\n    <div style={{ background: color || \"white\" }} className=\"verify-image\">\n      <span className=\"verify-image__label\">{label}</span>\n      <img src={imgSrc} />\n    </div>\n  );\n};\n\nasync function withImg<T>(\n  imgSrc: string,\n  cb: (img: HTMLImageElement) => T\n): Promise<T> {\n  return new Promise<T>((resolve, reject) => {\n    const img = document.createElement(\"img\");\n    img.src = imgSrc;\n\n    img.onload = () => {\n      const res = cb(img);\n      document.body.removeChild(img);\n      resolve(res);\n    };\n    img.onerror = (e) => {\n      reject(e);\n    };\n    document.body.appendChild(img);\n  });\n}\n\nfunction shuffle<T>(array: T[]): T[] {\n  var currentIndex = array.length,\n    temporaryValue,\n    randomIndex;\n\n  // While there remain elements to shuffle...\n  while (0 !== currentIndex) {\n    // Pick a remaining element...\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex -= 1;\n\n    // And swap it with the current element.\n    temporaryValue = array[currentIndex];\n    array[currentIndex] = array[randomIndex];\n    array[randomIndex] = temporaryValue;\n  }\n\n  return array;\n}\n\nasync function withImgs<T>(\n  imgSrcs: string[],\n  cb: (imgs: HTMLImageElement[]) => Promise<T>\n): Promise<T> {\n  return new Promise<T>(async (resolve, reject) => {\n    const imgs = imgSrcs.map((src) => {\n      const img = document.createElement(\"img\");\n      img.src = src;\n      return img;\n    });\n\n    const loadPromises = imgs.map(\n      (img) =>\n        new Promise<HTMLImageElement>((resolve, reject) => {\n          img.onload = () => {\n            resolve(img);\n          };\n          img.onerror = (e) => reject(e);\n        })\n    );\n\n    imgs.forEach((img) => document.body.appendChild(img));\n\n    const doms = await Promise.all(loadPromises);\n    const ret = await cb(doms);\n\n    imgs.forEach((img) => document.body.removeChild(img));\n    resolve(ret);\n  });\n}\n\nlet mobilenet: MobileNet.MobileNet | undefined;\nlet classifier: KNNClassifier.KNNClassifier | undefined;\n\nconst Tiler = () => {\n  /*useEffect(() => {\n    async function doo() {\n\n      await withImgs(verifySet, async (imgs) => {\n        console.log(\"loaded, verifying...\");\n        for (let i = 0; i < imgs.length; i++) {\n          console.log(i);\n          const xlogits = mobilenet!.infer(imgs[i]);\n          const result = await classifier!.predictClass(xlogits);\n          //console.log(`${result.label} - ${verifySet[i]}`);\n          classifieds.push({ label: result.label, imgSrc: verifySet[i] });\n        }\n      });\n\n    }\n    doo();\n  }, []);*/\n\n  interface RResult {\n    columns: number;\n    rows: number;\n    labels: string[][];\n  }\n  const [result, setResult] = useState<RResult>();\n  const [clearFiles, setClearfiles] = useState<() => {}>(() => () => {});\n\n  return (\n    <div>\n      <Dropzone\n        addClassNames={{ dropzone: \"dropzone\", preview: \"dropzone-preview\" }}\n        onSubmit={async (files, allFiles) => {\n          const imgs = await Promise.all(\n            allFiles.map((file) => {\n              return new Promise<{\n                img: HTMLImageElement;\n                coords: { x: number; y: number };\n              }>((resolve, reject) => {\n                let alreadyRejected = false;\n\n                const fr = new FileReader();\n\n                fr.onload = () => {\n                  const img = document.createElement(\"img\");\n                  img.onload = () => {\n                    const fname = file.meta.name.split(\".\")[0];\n                    const [y, x] = fname.split(\"-\").map((s) => parseInt(s, 10));\n                    console.log(fname);\n\n                    resolve({ img, coords: { x, y } });\n                  };\n                  img.onerror = () => {\n                    if (!alreadyRejected) {\n                      reject();\n                      alreadyRejected = true;\n                    }\n                  };\n                  img.src = fr.result as string;\n                };\n\n                fr.onerror = () => {\n                  if (!alreadyRejected) {\n                    reject();\n                    alreadyRejected = true;\n                  }\n                };\n\n                fr.readAsDataURL(file.file);\n              });\n            })\n          );\n\n          const rowCount = maxBy(imgs, (img) => img.coords.y)!.coords.y + 1;\n          const columnCount = maxBy(imgs, (img) => img.coords.x)!.coords.x + 1;\n          const out = new Array(columnCount);\n          for (let i = 0; i < out.length; i++) {\n            out[i] = new Array(rowCount);\n          }\n\n          for (const { coords, img } of imgs) {\n            const xlogits = mobilenet!.infer(img);\n            const result = await classifier!.predictClass(xlogits);\n            console.log({\n              label: result.label,\n              confidences: result.confidences,\n            });\n            out[coords.y][coords.x] = result.label;\n          }\n\n          setResult({\n            columns: columnCount,\n            rows: rowCount,\n            labels: out,\n          });\n\n          setClearfiles(() => () => {\n            allFiles.forEach((f) => f.remove());\n          });\n        }}\n        inputContent=\"drop tiles here\"\n        submitButtonDisabled={(files) => files.length < 1}\n      />\n      <div>\n        <button onClick={clearFiles}>clear</button>\n      </div>\n      <div>\n        <pre>\n          <code>\n            {result &&\n              result.labels\n                .map((row) => row.join(\"  \"))\n                .map((row, i) => (\n                  <React.Fragment key={[row, i].join(\"\")}>\n                    {row}\n                    <br />\n                  </React.Fragment>\n                ))}\n          </code>\n        </pre>\n      </div>\n    </div>\n  );\n};\n\nfunction App() {\n  const [tileColSum, setTileColSum] = useState<{ [img: string]: number[] }>();\n  const [tileColSumRdy, setTileColSumRdy] = useState<boolean>(false);\n\n  /*useEffect(() => {\n    setTimeout(() => {\n      dumpImgPixels()\n        .then(() => console.log(\"dumped pixels\"))\n        .catch((e: any) => console.error(e));\n    }, 200);\n  }, []);*/\n\n  /*useEffect(() => {\n    setTimeout(() => {\n      calcColSumsForTiles().then((res) => {\n        setTileColSum(res);\n        setTileColSumRdy(true);\n      });\n    }, 100);\n  }, [setTileColSumRdy, setTileColSum]);*/\n\n  const [classifiedImages, setClassifiedImages] = useState<\n    {\n      label: string;\n      imgSrc: string;\n    }[]\n  >([]);\n\n  const [mbnetReady, setmbnetReady] = useState<number>(0);\n\n  useEffect(() => {\n    async function doo() {\n      //TF.registerBackend('webgl', () => TFBackendWebGL)\n      const trainset = shuffle([...pretrains]);\n\n      classifier = KNNClassifier.create();\n      mobilenet = await MobileNet.load();\n\n      console.log(\"loading images\");\n      await withImgs(\n        trainset.map((t) => t.img),\n        async (imgs) => {\n          console.log(\"finish loading images, training...\");\n          for (let i = 0; i < imgs.length; i++) {\n            console.log(`${i}/${imgs.length}`);\n            const logits = mobilenet!.infer(imgs[i]);\n            classifier!.addExample(logits, trainset[i].opt);\n          }\n        }\n      );\n\n      console.log(classifier!.getClassifierDataset());\n\n      console.log(\"loading verification images\");\n      const verifySet = testTiles;\n\n      let classifieds: {\n        label: string;\n        imgSrc: string;\n      }[] = [];\n\n      await withImgs(verifySet, async (imgs) => {\n        console.log(\"loaded, verifying...\");\n        for (let i = 0; i < imgs.length; i++) {\n          console.log(i);\n          const xlogits = mobilenet!.infer(imgs[i]);\n          const result = await classifier!.predictClass(xlogits);\n          //console.log(`${result.label} - ${verifySet[i]}`);\n          classifieds.push({ label: result.label, imgSrc: verifySet[i] });\n        }\n      });\n\n      setClassifiedImages(classifieds);\n      setmbnetReady((n) => n + 1);\n    }\n    doo();\n  }, [setClassifiedImages]);\n\n  const [currOpt, setCurrOpt] = useState<number>(0);\n  const [labelIdxToOptIdx, setLabelIdxToOptIdx] = useState<{\n    [i: number]: number | undefined;\n  }>(getLabelIdxToOptIdxInitialState());\n\n  const currOptRef = useRef<number>(currOpt);\n  const handleOptClick = useCallback(\n    (i: number) => {\n      currOptRef.current = i;\n      setCurrOpt(i);\n    },\n    [setCurrOpt]\n  );\n\n  const handleTileClick = useCallback(\n    (i: number) => {\n      setLabelIdxToOptIdx((curr) => ({ ...curr, [i]: currOptRef.current }));\n    },\n    [setLabelIdxToOptIdx, currOptRef]\n  );\n\n  const labelIdxToOptIdxRef = useRef(labelIdxToOptIdx);\n  labelIdxToOptIdxRef.current = labelIdxToOptIdx;\n  const doDump = useCallback(() => {\n    console.log(\n      JSON.stringify(\n        Object.entries(labelIdxToOptIdxRef.current).map(\n          ([labelIdx, optIdx]) => ({\n            img: tiles[parseInt(labelIdx, 10)],\n            opt: opts[optIdx!],\n          })\n        )\n      )\n    );\n  }, [labelIdxToOptIdxRef]);\n\n  const renderOrder = useMemo<number[]>(() => {\n    if (!tileColSumRdy) {\n      return [];\n    }\n\n    const tileIdxToRenderIdx: number[] = [];\n    tileIdxToRenderIdx.length = tiles.length;\n    [...tiles]\n      .map((tile, i) => ({ tile, i }))\n      .sort((a, b) => {\n        const colA = tileColSum![a.tile];\n        const colB = tileColSum![b.tile];\n\n        let cum = 0;\n        for (let y = 0; y < colA.length; y++) {\n          cum += colA[y] - colB[y];\n        }\n        return cum;\n      })\n      .forEach((v, renderI) => {\n        tileIdxToRenderIdx[v.i] = renderI;\n      });\n    return tileIdxToRenderIdx;\n  }, [tileColSumRdy]);\n\n  return (\n    <div className=\"App\">\n      <div className=\"controls\">\n        {opts.map((opt, i) => (\n          <OptBtn\n            key={opt}\n            current={currOpt === i}\n            i={i}\n            opt={opt}\n            onClick={handleOptClick}\n          >\n            {opt}\n          </OptBtn>\n        ))}\n      </div>\n      <div>\n        <button onClick={doDump}>dump</button>\n      </div>\n      <div>\n        <Tiler key={\"tiler\" + mbnetReady} />\n      </div>\n      {classifiedImages.length < 0 && <p>Classifying...</p>}\n      <div className=\"tile-container\">\n        {classifiedImages.map(({ imgSrc, label }) => (\n          <VerifyImage\n            key={imgSrc}\n            label={label}\n            imgSrc={imgSrc}\n            color={optToColor[label as Opt]}\n          />\n        ))}\n      </div>\n      <div className=\"tile-container\">\n        {tiles\n          .map((tile, tileI) => {\n            if (renderOrder.length > 0) {\n              return { tile, tileI, renderI: renderOrder[tileI] };\n            } else {\n              return { tile, tileI, renderI: tileI };\n            }\n          })\n          .sort((a, b) => a.renderI - b.renderI)\n          .map(({ tile, tileI, renderI }) => (\n            <LabelableImage\n              key={tile}\n              i={tileI}\n              src={tile}\n              background={\n                typeof labelIdxToOptIdx[tileI] === \"undefined\"\n                  ? undefined\n                  : colors[labelIdxToOptIdx[tileI]!]\n              }\n              onClick={handleTileClick}\n            />\n          ))}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","/home/cxcorp/Projects/cyber-nn-trainer/src/pretrains.ts",["30"],"export default [\n  { img: \"/tiles/Cyberpunk2077_3dkE8FK4W8-0.bmp\", opt: \"55\" },\n  { img: \"/tiles/Cyberpunk2077_3dkE8FK4W8-10.bmp\", opt: \"7A\" },\n  { img: \"/tiles/Cyberpunk2077_3dkE8FK4W8-12.bmp\", opt: \"1C\" },\n  { img: \"/tiles/Cyberpunk2077_3dkE8FK4W8-14.bmp\", opt: \"55\" },\n  { img: \"/tiles/Cyberpunk2077_3dkE8FK4W8-16.bmp\", opt: \"BD\" },\n  { img: \"/tiles/Cyberpunk2077_3dkE8FK4W8-18.bmp\", opt: \"1C\" },\n  { img: \"/tiles/Cyberpunk2077_3dkE8FK4W8-2.bmp\", opt: \"1C\" },\n  { img: \"/tiles/Cyberpunk2077_3dkE8FK4W8-21.bmp\", opt: \"7A\" },\n  { img: \"/tiles/Cyberpunk2077_3dkE8FK4W8-23.bmp\", opt: \"1C\" },\n  { img: \"/tiles/Cyberpunk2077_3dkE8FK4W8-25.bmp\", opt: \"E9\" },\n  { img: \"/tiles/Cyberpunk2077_3dkE8FK4W8-27.bmp\", opt: \"7A\" },\n  { img: \"/tiles/Cyberpunk2077_3dkE8FK4W8-29.bmp\", opt: \"1C\" },\n  { img: \"/tiles/Cyberpunk2077_3dkE8FK4W8-30.bmp\", opt: \"1C\" },\n  { img: \"/tiles/Cyberpunk2077_3dkE8FK4W8-32.bmp\", opt: \"7A\" },\n  { img: \"/tiles/Cyberpunk2077_3dkE8FK4W8-34.bmp\", opt: \"BD\" },\n  { img: \"/tiles/Cyberpunk2077_3dkE8FK4W8-4.bmp\", opt: \"1C\" },\n  { img: \"/tiles/Cyberpunk2077_3dkE8FK4W8-6.bmp\", opt: \"55\" },\n  { img: \"/tiles/Cyberpunk2077_3dkE8FK4W8-8.bmp\", opt: \"1C\" },\n  { img: \"/tiles/Cyberpunk2077_5CnxBBrJBN-0.bmp\", opt: \"1C\" },\n  { img: \"/tiles/Cyberpunk2077_5CnxBBrJBN-10.bmp\", opt: \"55\" },\n  { img: \"/tiles/Cyberpunk2077_5CnxBBrJBN-12.bmp\", opt: \"E9\" },\n  { img: \"/tiles/Cyberpunk2077_5CnxBBrJBN-14.bmp\", opt: \"55\" },\n  { img: \"/tiles/Cyberpunk2077_5CnxBBrJBN-16.bmp\", opt: \"E9\" },\n  { img: \"/tiles/Cyberpunk2077_5CnxBBrJBN-18.bmp\", opt: \"55\" },\n  { img: \"/tiles/Cyberpunk2077_5CnxBBrJBN-2.bmp\", opt: \"55\" },\n  { img: \"/tiles/Cyberpunk2077_5CnxBBrJBN-21.bmp\", opt: \"1C\" },\n  { img: \"/tiles/Cyberpunk2077_5CnxBBrJBN-23.bmp\", opt: \"1C\" },\n  { img: \"/tiles/Cyberpunk2077_5CnxBBrJBN-25.bmp\", opt: \"E9\" },\n  { img: \"/tiles/Cyberpunk2077_5CnxBBrJBN-27.bmp\", opt: \"7A\" },\n  { img: \"/tiles/Cyberpunk2077_5CnxBBrJBN-29.bmp\", opt: \"7A\" },\n  { img: \"/tiles/Cyberpunk2077_5CnxBBrJBN-30.bmp\", opt: \"1C\" },\n  { img: \"/tiles/Cyberpunk2077_5CnxBBrJBN-32.bmp\", opt: \"55\" },\n  { img: \"/tiles/Cyberpunk2077_5CnxBBrJBN-34.bmp\", opt: \"1C\" },\n  { img: \"/tiles/Cyberpunk2077_5CnxBBrJBN-4.bmp\", opt: \"1C\" },\n  { img: \"/tiles/Cyberpunk2077_5CnxBBrJBN-6.bmp\", opt: \"1C\" },\n  { img: \"/tiles/Cyberpunk2077_5CnxBBrJBN-8.bmp\", opt: \"E9\" },\n  { img: \"/tiles/Cyberpunk2077_5M2qVi5Hi9-0.bmp\", opt: \"1C\" },\n  { img: \"/tiles/Cyberpunk2077_5M2qVi5Hi9-10.bmp\", opt: \"7A\" },\n  { img: \"/tiles/Cyberpunk2077_5M2qVi5Hi9-12.bmp\", opt: \"E9\" },\n  { img: \"/tiles/Cyberpunk2077_5M2qVi5Hi9-14.bmp\", opt: \"1C\" },\n  { img: \"/tiles/Cyberpunk2077_5M2qVi5Hi9-16.bmp\", opt: \"7A\" },\n  { img: \"/tiles/Cyberpunk2077_5M2qVi5Hi9-18.bmp\", opt: \"7A\" },\n  { img: \"/tiles/Cyberpunk2077_5M2qVi5Hi9-2.bmp\", opt: \"1C\" },\n  { img: \"/tiles/Cyberpunk2077_5M2qVi5Hi9-21.bmp\", opt: \"7A\" },\n  { img: \"/tiles/Cyberpunk2077_5M2qVi5Hi9-23.bmp\", opt: \"1C\" },\n  { img: \"/tiles/Cyberpunk2077_5M2qVi5Hi9-25.bmp\", opt: \"E9\" },\n  { img: \"/tiles/Cyberpunk2077_5M2qVi5Hi9-27.bmp\", opt: \"1C\" },\n  { img: \"/tiles/Cyberpunk2077_5M2qVi5Hi9-29.bmp\", opt: \"1C\" },\n  { img: \"/tiles/Cyberpunk2077_5M2qVi5Hi9-30.bmp\", opt: \"BD\" },\n  { img: \"/tiles/Cyberpunk2077_5M2qVi5Hi9-32.bmp\", opt: \"55\" },\n  { img: \"/tiles/Cyberpunk2077_5M2qVi5Hi9-34.bmp\", opt: \"E9\" },\n  { img: \"/tiles/Cyberpunk2077_5M2qVi5Hi9-4.bmp\", opt: \"55\" },\n  { img: \"/tiles/Cyberpunk2077_5M2qVi5Hi9-6.bmp\", opt: \"7A\" },\n  { img: \"/tiles/Cyberpunk2077_5M2qVi5Hi9-8.bmp\", opt: \"E9\" },\n  { img: \"/tiles/Cyberpunk2077_5QTxussjBn-0.bmp\", opt: \"1C\" },\n  { img: \"/tiles/Cyberpunk2077_5QTxussjBn-10.bmp\", opt: \"55\" },\n  { img: \"/tiles/Cyberpunk2077_5QTxussjBn-12.bmp\", opt: \"1C\" },\n  { img: \"/tiles/Cyberpunk2077_5QTxussjBn-14.bmp\", opt: \"55\" },\n  { img: \"/tiles/Cyberpunk2077_5QTxussjBn-16.bmp\", opt: \"55\" },\n  { img: \"/tiles/Cyberpunk2077_5QTxussjBn-18.bmp\", opt: \"1C\" },\n  { img: \"/tiles/Cyberpunk2077_5QTxussjBn-2.bmp\", opt: \"7A\" },\n  { img: \"/tiles/Cyberpunk2077_5QTxussjBn-21.bmp\", opt: \"1C\" },\n  { img: \"/tiles/Cyberpunk2077_5QTxussjBn-23.bmp\", opt: \"1C\" },\n  { img: \"/tiles/Cyberpunk2077_5QTxussjBn-25.bmp\", opt: \"1C\" },\n  { img: \"/tiles/Cyberpunk2077_5QTxussjBn-27.bmp\", opt: \"7A\" },\n  { img: \"/tiles/Cyberpunk2077_5QTxussjBn-29.bmp\", opt: \"BD\" },\n  { img: \"/tiles/Cyberpunk2077_5QTxussjBn-30.bmp\", opt: \"1C\" },\n  { img: \"/tiles/Cyberpunk2077_5QTxussjBn-32.bmp\", opt: \"55\" },\n  { img: \"/tiles/Cyberpunk2077_5QTxussjBn-34.bmp\", opt: \"1C\" },\n  { img: \"/tiles/Cyberpunk2077_5QTxussjBn-4.bmp\", opt: \"BD\" },\n  { img: \"/tiles/Cyberpunk2077_5QTxussjBn-6.bmp\", opt: \"55\" },\n  { img: \"/tiles/Cyberpunk2077_5QTxussjBn-8.bmp\", opt: \"55\" },\n  { img: \"/tiles/Cyberpunk2077_5uSLsNd0fP-0.bmp\", opt: \"E9\" },\n  { img: \"/tiles/Cyberpunk2077_5uSLsNd0fP-10.bmp\", opt: \"E9\" },\n  { img: \"/tiles/Cyberpunk2077_5uSLsNd0fP-12.bmp\", opt: \"BD\" },\n  { img: \"/tiles/Cyberpunk2077_5uSLsNd0fP-14.bmp\", opt: \"55\" },\n  { img: \"/tiles/Cyberpunk2077_5uSLsNd0fP-16.bmp\", opt: \"BD\" },\n  { img: \"/tiles/Cyberpunk2077_5uSLsNd0fP-18.bmp\", opt: \"7A\" },\n  { img: \"/tiles/Cyberpunk2077_5uSLsNd0fP-2.bmp\", opt: \"BD\" },\n  { img: \"/tiles/Cyberpunk2077_5uSLsNd0fP-21.bmp\", opt: \"E9\" },\n  { img: \"/tiles/Cyberpunk2077_5uSLsNd0fP-23.bmp\", opt: \"1C\" },\n  { img: \"/tiles/Cyberpunk2077_5uSLsNd0fP-25.bmp\", opt: \"7A\" },\n  { img: \"/tiles/Cyberpunk2077_5uSLsNd0fP-27.bmp\", opt: \"1C\" },\n  { img: \"/tiles/Cyberpunk2077_5uSLsNd0fP-29.bmp\", opt: \"55\" },\n  { img: \"/tiles/Cyberpunk2077_5uSLsNd0fP-30.bmp\", opt: \"BD\" },\n  { img: \"/tiles/Cyberpunk2077_5uSLsNd0fP-32.bmp\", opt: \"1C\" },\n  { img: \"/tiles/Cyberpunk2077_5uSLsNd0fP-34.bmp\", opt: \"55\" },\n  { img: \"/tiles/Cyberpunk2077_5uSLsNd0fP-4.bmp\", opt: \"55\" },\n  { img: \"/tiles/Cyberpunk2077_5uSLsNd0fP-6.bmp\", opt: \"1C\" },\n  { img: \"/tiles/Cyberpunk2077_5uSLsNd0fP-8.bmp\", opt: \"7A\" },\n  { img: \"/tiles/Cyberpunk2077_BfuBfcvpj5-0.bmp\", opt: \"E9\" },\n  { img: \"/tiles/Cyberpunk2077_BfuBfcvpj5-10.bmp\", opt: \"7A\" },\n  { img: \"/tiles/Cyberpunk2077_BfuBfcvpj5-12.bmp\", opt: \"BD\" },\n  { img: \"/tiles/Cyberpunk2077_BfuBfcvpj5-14.bmp\", opt: \"1C\" },\n  { img: \"/tiles/Cyberpunk2077_BfuBfcvpj5-16.bmp\", opt: \"55\" },\n  { img: \"/tiles/Cyberpunk2077_BfuBfcvpj5-18.bmp\", opt: \"1C\" },\n  { img: \"/tiles/Cyberpunk2077_BfuBfcvpj5-2.bmp\", opt: \"1C\" },\n  { img: \"/tiles/Cyberpunk2077_BfuBfcvpj5-21.bmp\", opt: \"55\" },\n  { img: \"/tiles/Cyberpunk2077_BfuBfcvpj5-23.bmp\", opt: \"BD\" },\n  { img: \"/tiles/Cyberpunk2077_BfuBfcvpj5-25.bmp\", opt: \"BD\" },\n  { img: \"/tiles/Cyberpunk2077_BfuBfcvpj5-27.bmp\", opt: \"1C\" },\n  { img: \"/tiles/Cyberpunk2077_BfuBfcvpj5-29.bmp\", opt: \"BD\" },\n  { img: \"/tiles/Cyberpunk2077_BfuBfcvpj5-30.bmp\", opt: \"E9\" },\n  { img: \"/tiles/Cyberpunk2077_BfuBfcvpj5-32.bmp\", opt: \"BD\" },\n  { img: \"/tiles/Cyberpunk2077_BfuBfcvpj5-34.bmp\", opt: \"1C\" },\n  { img: \"/tiles/Cyberpunk2077_BfuBfcvpj5-4.bmp\", opt: \"BD\" },\n  { img: \"/tiles/Cyberpunk2077_BfuBfcvpj5-6.bmp\", opt: \"BD\" },\n  { img: \"/tiles/Cyberpunk2077_BfuBfcvpj5-8.bmp\", opt: \"7A\" },\n  { img: \"/tiles/Cyberpunk2077_KtxSLhKFYi-0.bmp\", opt: \"55\" },\n  { img: \"/tiles/Cyberpunk2077_KtxSLhKFYi-10.bmp\", opt: \"55\" },\n  { img: \"/tiles/Cyberpunk2077_KtxSLhKFYi-12.bmp\", opt: \"7A\" },\n  { img: \"/tiles/Cyberpunk2077_KtxSLhKFYi-14.bmp\", opt: \"55\" },\n  { img: \"/tiles/Cyberpunk2077_KtxSLhKFYi-16.bmp\", opt: \"BD\" },\n  { img: \"/tiles/Cyberpunk2077_KtxSLhKFYi-18.bmp\", opt: \"7A\" },\n  { img: \"/tiles/Cyberpunk2077_KtxSLhKFYi-2.bmp\", opt: \"55\" },\n  { img: \"/tiles/Cyberpunk2077_KtxSLhKFYi-21.bmp\", opt: \"1C\" },\n  { img: \"/tiles/Cyberpunk2077_KtxSLhKFYi-23.bmp\", opt: \"1C\" },\n  { img: \"/tiles/Cyberpunk2077_KtxSLhKFYi-25.bmp\", opt: \"BD\" },\n  { img: \"/tiles/Cyberpunk2077_KtxSLhKFYi-27.bmp\", opt: \"1C\" },\n  { img: \"/tiles/Cyberpunk2077_KtxSLhKFYi-29.bmp\", opt: \"E9\" },\n  { img: \"/tiles/Cyberpunk2077_KtxSLhKFYi-30.bmp\", opt: \"7A\" },\n  { img: \"/tiles/Cyberpunk2077_KtxSLhKFYi-32.bmp\", opt: \"7A\" },\n  { img: \"/tiles/Cyberpunk2077_KtxSLhKFYi-34.bmp\", opt: \"E9\" },\n  { img: \"/tiles/Cyberpunk2077_KtxSLhKFYi-4.bmp\", opt: \"55\" },\n  { img: \"/tiles/Cyberpunk2077_KtxSLhKFYi-6.bmp\", opt: \"1C\" },\n  { img: \"/tiles/Cyberpunk2077_KtxSLhKFYi-8.bmp\", opt: \"1C\" },\n  { img: \"/tiles/Cyberpunk2077_UZNO5rhhZC-0.bmp\", opt: \"1C\" },\n  { img: \"/tiles/Cyberpunk2077_UZNO5rhhZC-10.bmp\", opt: \"1C\" },\n  { img: \"/tiles/Cyberpunk2077_UZNO5rhhZC-12.bmp\", opt: \"7A\" },\n  { img: \"/tiles/Cyberpunk2077_UZNO5rhhZC-14.bmp\", opt: \"1C\" },\n  { img: \"/tiles/Cyberpunk2077_UZNO5rhhZC-16.bmp\", opt: \"7A\" },\n  { img: \"/tiles/Cyberpunk2077_UZNO5rhhZC-18.bmp\", opt: \"BD\" },\n  { img: \"/tiles/Cyberpunk2077_UZNO5rhhZC-2.bmp\", opt: \"55\" },\n  { img: \"/tiles/Cyberpunk2077_UZNO5rhhZC-21.bmp\", opt: \"7A\" },\n  { img: \"/tiles/Cyberpunk2077_UZNO5rhhZC-23.bmp\", opt: \"55\" },\n  { img: \"/tiles/Cyberpunk2077_UZNO5rhhZC-25.bmp\", opt: \"BD\" },\n  { img: \"/tiles/Cyberpunk2077_UZNO5rhhZC-27.bmp\", opt: \"BD\" },\n  { img: \"/tiles/Cyberpunk2077_UZNO5rhhZC-29.bmp\", opt: \"BD\" },\n  { img: \"/tiles/Cyberpunk2077_UZNO5rhhZC-30.bmp\", opt: \"55\" },\n  { img: \"/tiles/Cyberpunk2077_UZNO5rhhZC-32.bmp\", opt: \"55\" },\n  { img: \"/tiles/Cyberpunk2077_UZNO5rhhZC-34.bmp\", opt: \"55\" },\n  { img: \"/tiles/Cyberpunk2077_UZNO5rhhZC-4.bmp\", opt: \"55\" },\n  { img: \"/tiles/Cyberpunk2077_UZNO5rhhZC-6.bmp\", opt: \"55\" },\n  { img: \"/tiles/Cyberpunk2077_UZNO5rhhZC-8.bmp\", opt: \"1C\" },\n  { img: \"/tiles/Cyberpunk2077_VPSHIDMVPn-0.bmp\", opt: \"55\" },\n  { img: \"/tiles/Cyberpunk2077_VPSHIDMVPn-10.bmp\", opt: \"7A\" },\n  { img: \"/tiles/Cyberpunk2077_VPSHIDMVPn-12.bmp\", opt: \"55\" },\n  { img: \"/tiles/Cyberpunk2077_VPSHIDMVPn-14.bmp\", opt: \"E9\" },\n  { img: \"/tiles/Cyberpunk2077_VPSHIDMVPn-16.bmp\", opt: \"1C\" },\n  { img: \"/tiles/Cyberpunk2077_VPSHIDMVPn-18.bmp\", opt: \"7A\" },\n  { img: \"/tiles/Cyberpunk2077_VPSHIDMVPn-2.bmp\", opt: \"7A\" },\n  { img: \"/tiles/Cyberpunk2077_VPSHIDMVPn-21.bmp\", opt: \"55\" },\n  { img: \"/tiles/Cyberpunk2077_VPSHIDMVPn-23.bmp\", opt: \"BD\" },\n  { img: \"/tiles/Cyberpunk2077_VPSHIDMVPn-25.bmp\", opt: \"7A\" },\n  { img: \"/tiles/Cyberpunk2077_VPSHIDMVPn-27.bmp\", opt: \"1C\" },\n  { img: \"/tiles/Cyberpunk2077_VPSHIDMVPn-29.bmp\", opt: \"55\" },\n  { img: \"/tiles/Cyberpunk2077_VPSHIDMVPn-30.bmp\", opt: \"1C\" },\n  { img: \"/tiles/Cyberpunk2077_VPSHIDMVPn-32.bmp\", opt: \"7A\" },\n  { img: \"/tiles/Cyberpunk2077_VPSHIDMVPn-34.bmp\", opt: \"1C\" },\n  { img: \"/tiles/Cyberpunk2077_VPSHIDMVPn-4.bmp\", opt: \"7A\" },\n  { img: \"/tiles/Cyberpunk2077_VPSHIDMVPn-6.bmp\", opt: \"55\" },\n  { img: \"/tiles/Cyberpunk2077_VPSHIDMVPn-8.bmp\", opt: \"1C\" },\n  { img: \"/tiles/Cyberpunk2077_Z4Q3EbOopT-0.bmp\", opt: \"1C\" },\n  { img: \"/tiles/Cyberpunk2077_Z4Q3EbOopT-10.bmp\", opt: \"BD\" },\n  { img: \"/tiles/Cyberpunk2077_Z4Q3EbOopT-12.bmp\", opt: \"7A\" },\n  { img: \"/tiles/Cyberpunk2077_Z4Q3EbOopT-14.bmp\", opt: \"1C\" },\n  { img: \"/tiles/Cyberpunk2077_Z4Q3EbOopT-16.bmp\", opt: \"1C\" },\n  { img: \"/tiles/Cyberpunk2077_Z4Q3EbOopT-18.bmp\", opt: \"1C\" },\n  { img: \"/tiles/Cyberpunk2077_Z4Q3EbOopT-2.bmp\", opt: \"7A\" },\n  { img: \"/tiles/Cyberpunk2077_Z4Q3EbOopT-21.bmp\", opt: \"7A\" },\n  { img: \"/tiles/Cyberpunk2077_Z4Q3EbOopT-23.bmp\", opt: \"55\" },\n  { img: \"/tiles/Cyberpunk2077_Z4Q3EbOopT-25.bmp\", opt: \"55\" },\n  { img: \"/tiles/Cyberpunk2077_Z4Q3EbOopT-27.bmp\", opt: \"BD\" },\n  { img: \"/tiles/Cyberpunk2077_Z4Q3EbOopT-29.bmp\", opt: \"E9\" },\n  { img: \"/tiles/Cyberpunk2077_Z4Q3EbOopT-30.bmp\", opt: \"E9\" },\n  { img: \"/tiles/Cyberpunk2077_Z4Q3EbOopT-32.bmp\", opt: \"1C\" },\n  { img: \"/tiles/Cyberpunk2077_Z4Q3EbOopT-34.bmp\", opt: \"1C\" },\n  { img: \"/tiles/Cyberpunk2077_Z4Q3EbOopT-4.bmp\", opt: \"1C\" },\n  { img: \"/tiles/Cyberpunk2077_Z4Q3EbOopT-6.bmp\", opt: \"1C\" },\n  { img: \"/tiles/Cyberpunk2077_Z4Q3EbOopT-8.bmp\", opt: \"7A\" },\n  { img: \"/tiles/Cyberpunk2077_ZXDWeqbh1p-0.bmp\", opt: \"7A\" },\n  { img: \"/tiles/Cyberpunk2077_ZXDWeqbh1p-10.bmp\", opt: \"55\" },\n  { img: \"/tiles/Cyberpunk2077_ZXDWeqbh1p-12.bmp\", opt: \"1C\" },\n  { img: \"/tiles/Cyberpunk2077_ZXDWeqbh1p-14.bmp\", opt: \"55\" },\n  { img: \"/tiles/Cyberpunk2077_ZXDWeqbh1p-16.bmp\", opt: \"7A\" },\n  { img: \"/tiles/Cyberpunk2077_ZXDWeqbh1p-18.bmp\", opt: \"1C\" },\n  { img: \"/tiles/Cyberpunk2077_ZXDWeqbh1p-2.bmp\", opt: \"BD\" },\n  { img: \"/tiles/Cyberpunk2077_ZXDWeqbh1p-21.bmp\", opt: \"55\" },\n  { img: \"/tiles/Cyberpunk2077_ZXDWeqbh1p-23.bmp\", opt: \"E9\" },\n  { img: \"/tiles/Cyberpunk2077_ZXDWeqbh1p-25.bmp\", opt: \"7A\" },\n  { img: \"/tiles/Cyberpunk2077_ZXDWeqbh1p-27.bmp\", opt: \"E9\" },\n  { img: \"/tiles/Cyberpunk2077_ZXDWeqbh1p-29.bmp\", opt: \"1C\" },\n  { img: \"/tiles/Cyberpunk2077_ZXDWeqbh1p-30.bmp\", opt: \"E9\" },\n  { img: \"/tiles/Cyberpunk2077_ZXDWeqbh1p-32.bmp\", opt: \"BD\" },\n  { img: \"/tiles/Cyberpunk2077_ZXDWeqbh1p-34.bmp\", opt: \"BD\" },\n  { img: \"/tiles/Cyberpunk2077_ZXDWeqbh1p-4.bmp\", opt: \"7A\" },\n  { img: \"/tiles/Cyberpunk2077_ZXDWeqbh1p-6.bmp\", opt: \"55\" },\n  { img: \"/tiles/Cyberpunk2077_ZXDWeqbh1p-8.bmp\", opt: \"1C\" },\n  { img: \"/tiles/Cyberpunk2077_evqkNlETkm-0.bmp\", opt: \"55\" },\n  { img: \"/tiles/Cyberpunk2077_evqkNlETkm-10.bmp\", opt: \"1C\" },\n  { img: \"/tiles/Cyberpunk2077_evqkNlETkm-12.bmp\", opt: \"7A\" },\n  { img: \"/tiles/Cyberpunk2077_evqkNlETkm-14.bmp\", opt: \"1C\" },\n  { img: \"/tiles/Cyberpunk2077_evqkNlETkm-16.bmp\", opt: \"1C\" },\n  { img: \"/tiles/Cyberpunk2077_evqkNlETkm-18.bmp\", opt: \"1C\" },\n  { img: \"/tiles/Cyberpunk2077_evqkNlETkm-2.bmp\", opt: \"1C\" },\n  { img: \"/tiles/Cyberpunk2077_evqkNlETkm-21.bmp\", opt: \"E9\" },\n  { img: \"/tiles/Cyberpunk2077_evqkNlETkm-23.bmp\", opt: \"7A\" },\n  { img: \"/tiles/Cyberpunk2077_evqkNlETkm-25.bmp\", opt: \"1C\" },\n  { img: \"/tiles/Cyberpunk2077_evqkNlETkm-27.bmp\", opt: \"1C\" },\n  { img: \"/tiles/Cyberpunk2077_evqkNlETkm-29.bmp\", opt: \"1C\" },\n  { img: \"/tiles/Cyberpunk2077_evqkNlETkm-30.bmp\", opt: \"BD\" },\n  { img: \"/tiles/Cyberpunk2077_evqkNlETkm-32.bmp\", opt: \"BD\" },\n  { img: \"/tiles/Cyberpunk2077_evqkNlETkm-34.bmp\", opt: \"E9\" },\n  { img: \"/tiles/Cyberpunk2077_evqkNlETkm-4.bmp\", opt: \"55\" },\n  { img: \"/tiles/Cyberpunk2077_evqkNlETkm-6.bmp\", opt: \"55\" },\n  { img: \"/tiles/Cyberpunk2077_evqkNlETkm-8.bmp\", opt: \"55\" },\n  { img: \"/tiles/Cyberpunk2077_jIaaTMCJOQ-0.bmp\", opt: \"1C\" },\n  { img: \"/tiles/Cyberpunk2077_jIaaTMCJOQ-10.bmp\", opt: \"BD\" },\n  { img: \"/tiles/Cyberpunk2077_jIaaTMCJOQ-12.bmp\", opt: \"1C\" },\n  { img: \"/tiles/Cyberpunk2077_jIaaTMCJOQ-14.bmp\", opt: \"55\" },\n  { img: \"/tiles/Cyberpunk2077_jIaaTMCJOQ-16.bmp\", opt: \"55\" },\n  { img: \"/tiles/Cyberpunk2077_jIaaTMCJOQ-18.bmp\", opt: \"1C\" },\n  { img: \"/tiles/Cyberpunk2077_jIaaTMCJOQ-2.bmp\", opt: \"55\" },\n  { img: \"/tiles/Cyberpunk2077_jIaaTMCJOQ-21.bmp\", opt: \"55\" },\n  { img: \"/tiles/Cyberpunk2077_jIaaTMCJOQ-23.bmp\", opt: \"1C\" },\n  { img: \"/tiles/Cyberpunk2077_jIaaTMCJOQ-25.bmp\", opt: \"E9\" },\n  { img: \"/tiles/Cyberpunk2077_jIaaTMCJOQ-27.bmp\", opt: \"55\" },\n  { img: \"/tiles/Cyberpunk2077_jIaaTMCJOQ-29.bmp\", opt: \"1C\" },\n  { img: \"/tiles/Cyberpunk2077_jIaaTMCJOQ-30.bmp\", opt: \"55\" },\n  { img: \"/tiles/Cyberpunk2077_jIaaTMCJOQ-32.bmp\", opt: \"55\" },\n  { img: \"/tiles/Cyberpunk2077_jIaaTMCJOQ-34.bmp\", opt: \"E9\" },\n  { img: \"/tiles/Cyberpunk2077_jIaaTMCJOQ-4.bmp\", opt: \"55\" },\n  { img: \"/tiles/Cyberpunk2077_jIaaTMCJOQ-6.bmp\", opt: \"1C\" },\n  { img: \"/tiles/Cyberpunk2077_jIaaTMCJOQ-8.bmp\", opt: \"BD\" },\n  { img: \"/tiles/Cyberpunk2077_tQJ26HmCJJ-0.bmp\", opt: \"55\" },\n  { img: \"/tiles/Cyberpunk2077_tQJ26HmCJJ-10.bmp\", opt: \"7A\" },\n  { img: \"/tiles/Cyberpunk2077_tQJ26HmCJJ-12.bmp\", opt: \"1C\" },\n  { img: \"/tiles/Cyberpunk2077_tQJ26HmCJJ-14.bmp\", opt: \"1C\" },\n  { img: \"/tiles/Cyberpunk2077_tQJ26HmCJJ-16.bmp\", opt: \"BD\" },\n  { img: \"/tiles/Cyberpunk2077_tQJ26HmCJJ-18.bmp\", opt: \"1C\" },\n  { img: \"/tiles/Cyberpunk2077_tQJ26HmCJJ-2.bmp\", opt: \"55\" },\n  { img: \"/tiles/Cyberpunk2077_tQJ26HmCJJ-21.bmp\", opt: \"E9\" },\n  { img: \"/tiles/Cyberpunk2077_tQJ26HmCJJ-23.bmp\", opt: \"7A\" },\n  { img: \"/tiles/Cyberpunk2077_tQJ26HmCJJ-25.bmp\", opt: \"1C\" },\n  { img: \"/tiles/Cyberpunk2077_tQJ26HmCJJ-27.bmp\", opt: \"1C\" },\n  { img: \"/tiles/Cyberpunk2077_tQJ26HmCJJ-29.bmp\", opt: \"1C\" },\n  { img: \"/tiles/Cyberpunk2077_tQJ26HmCJJ-30.bmp\", opt: \"BD\" },\n  { img: \"/tiles/Cyberpunk2077_tQJ26HmCJJ-32.bmp\", opt: \"E9\" },\n  { img: \"/tiles/Cyberpunk2077_tQJ26HmCJJ-34.bmp\", opt: \"55\" },\n  { img: \"/tiles/Cyberpunk2077_tQJ26HmCJJ-4.bmp\", opt: \"7A\" },\n  { img: \"/tiles/Cyberpunk2077_tQJ26HmCJJ-6.bmp\", opt: \"7A\" },\n  { img: \"/tiles/Cyberpunk2077_tQJ26HmCJJ-8.bmp\", opt: \"1C\" },\n  { img: \"/tiles/Cyberpunk2077_ywq24jfDUL-0.bmp\", opt: \"BD\" },\n  { img: \"/tiles/Cyberpunk2077_ywq24jfDUL-10.bmp\", opt: \"BD\" },\n  { img: \"/tiles/Cyberpunk2077_ywq24jfDUL-12.bmp\", opt: \"BD\" },\n  { img: \"/tiles/Cyberpunk2077_ywq24jfDUL-14.bmp\", opt: \"55\" },\n  { img: \"/tiles/Cyberpunk2077_ywq24jfDUL-16.bmp\", opt: \"BD\" },\n  { img: \"/tiles/Cyberpunk2077_ywq24jfDUL-18.bmp\", opt: \"1C\" },\n  { img: \"/tiles/Cyberpunk2077_ywq24jfDUL-2.bmp\", opt: \"BD\" },\n  { img: \"/tiles/Cyberpunk2077_ywq24jfDUL-21.bmp\", opt: \"1C\" },\n  { img: \"/tiles/Cyberpunk2077_ywq24jfDUL-23.bmp\", opt: \"BD\" },\n  { img: \"/tiles/Cyberpunk2077_ywq24jfDUL-25.bmp\", opt: \"7A\" },\n  { img: \"/tiles/Cyberpunk2077_ywq24jfDUL-27.bmp\", opt: \"E9\" },\n  { img: \"/tiles/Cyberpunk2077_ywq24jfDUL-29.bmp\", opt: \"7A\" },\n  { img: \"/tiles/Cyberpunk2077_ywq24jfDUL-30.bmp\", opt: \"1C\" },\n  { img: \"/tiles/Cyberpunk2077_ywq24jfDUL-32.bmp\", opt: \"E9\" },\n  { img: \"/tiles/Cyberpunk2077_ywq24jfDUL-34.bmp\", opt: \"1C\" },\n  { img: \"/tiles/Cyberpunk2077_ywq24jfDUL-4.bmp\", opt: \"E9\" },\n  { img: \"/tiles/Cyberpunk2077_ywq24jfDUL-6.bmp\", opt: \"BD\" },\n  { img: \"/tiles/Cyberpunk2077_ywq24jfDUL-8.bmp\", opt: \"1C\" },\n  { img: \"/tiles/puuro_1600x200_maxfuckup-0.bmp\", opt: \"1C\" },\n  { img: \"/tiles/puuro_1600x200_maxfuckup-10.bmp\", opt: \"BD\" },\n  { img: \"/tiles/puuro_1600x200_maxfuckup-12.bmp\", opt: \"7A\" },\n  { img: \"/tiles/puuro_1600x200_maxfuckup-14.bmp\", opt: \"1C\" },\n  { img: \"/tiles/puuro_1600x200_maxfuckup-16.bmp\", opt: \"1C\" },\n  { img: \"/tiles/puuro_1600x200_maxfuckup-18.bmp\", opt: \"1C\" },\n  { img: \"/tiles/puuro_1600x200_maxfuckup-2.bmp\", opt: \"7A\" },\n  { img: \"/tiles/puuro_1600x200_maxfuckup-21.bmp\", opt: \"7A\" },\n  { img: \"/tiles/puuro_1600x200_maxfuckup-23.bmp\", opt: \"55\" },\n  { img: \"/tiles/puuro_1600x200_maxfuckup-25.bmp\", opt: \"7A\" },\n  { img: \"/tiles/puuro_1600x200_maxfuckup-27.bmp\", opt: \"BD\" },\n  { img: \"/tiles/puuro_1600x200_maxfuckup-29.bmp\", opt: \"E9\" },\n  { img: \"/tiles/puuro_1600x200_maxfuckup-30.bmp\", opt: \"E9\" },\n  { img: \"/tiles/puuro_1600x200_maxfuckup-32.bmp\", opt: \"1C\" },\n  { img: \"/tiles/puuro_1600x200_maxfuckup-34.bmp\", opt: \"1C\" },\n  { img: \"/tiles/puuro_1600x200_maxfuckup-4.bmp\", opt: \"1C\" },\n  { img: \"/tiles/puuro_1600x200_maxfuckup-6.bmp\", opt: \"1C\" },\n  { img: \"/tiles/puuro_1600x200_maxfuckup-8.bmp\", opt: \"7A\" },\n  { img: \"/tiles/youtube_screenie-0.bmp\", opt: \"55\" },\n  { img: \"/tiles/youtube_screenie-10.bmp\", opt: \"E9\" },\n  { img: \"/tiles/youtube_screenie-12.bmp\", opt: \"BD\" },\n  { img: \"/tiles/youtube_screenie-14.bmp\", opt: \"55\" },\n  { img: \"/tiles/youtube_screenie-16.bmp\", opt: \"1C\" },\n  { img: \"/tiles/youtube_screenie-18.bmp\", opt: \"55\" },\n  { img: \"/tiles/youtube_screenie-2.bmp\", opt: \"E9\" },\n  { img: \"/tiles/youtube_screenie-21.bmp\", opt: \"E9\" },\n  { img: \"/tiles/youtube_screenie-23.bmp\", opt: \"BD\" },\n  { img: \"/tiles/youtube_screenie-3.bmp\", opt: \"E9\" },\n  { img: \"/tiles/youtube_screenie-5.bmp\", opt: \"1C\" },\n  { img: \"/tiles/youtube_screenie-7.bmp\", opt: \"1C\" },\n  { img: \"/tiles/youtube_screenie-9.bmp\", opt: \"E9\" },\n  { img: \"/tiles/youtube_screenie_2-1.bmp\", opt: \"E9\" },\n  { img: \"/tiles/youtube_screenie_2-11.bmp\", opt: \"E9\" },\n  { img: \"/tiles/youtube_screenie_2-13.bmp\", opt: \"1C\" },\n  { img: \"/tiles/youtube_screenie_2-15.bmp\", opt: \"1C\" },\n  { img: \"/tiles/youtube_screenie_2-17.bmp\", opt: \"1C\" },\n  { img: \"/tiles/youtube_screenie_2-19.bmp\", opt: \"1C\" },\n  { img: \"/tiles/youtube_screenie_2-20.bmp\", opt: \"1C\" },\n  { img: \"/tiles/youtube_screenie_2-22.bmp\", opt: \"1C\" },\n  { img: \"/tiles/youtube_screenie_2-24.bmp\", opt: \"BD\" },\n  { img: \"/tiles/youtube_screenie_2-4.bmp\", opt: \"BD\" },\n  { img: \"/tiles/youtube_screenie_2-6.bmp\", opt: \"1C\" },\n  { img: \"/tiles/youtube_screenie_2-8.bmp\", opt: \"55\" },\n  { img: \"/tiles/youtube_screenie_3-0.bmp\", opt: \"BD\" },\n  { img: \"/tiles/youtube_screenie_3-10.bmp\", opt: \"1C\" },\n  { img: \"/tiles/youtube_screenie_3-12.bmp\", opt: \"1C\" },\n  { img: \"/tiles/youtube_screenie_3-14.bmp\", opt: \"BD\" },\n  { img: \"/tiles/youtube_screenie_3-2.bmp\", opt: \"E9\" },\n  { img: \"/tiles/youtube_screenie_3-4.bmp\", opt: \"E9\" },\n  { img: \"/tiles/youtube_screenie_3-6.bmp\", opt: \"BD\" },\n  { img: \"/tiles/youtube_screenie_3-8.bmp\", opt: \"BD\" },\n];\n",["31","32"],{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","severity":1,"message":"38","line":14,"column":8,"nodeType":"39","messageId":"40","endLine":14,"endColumn":10},{"ruleId":"37","severity":1,"message":"41","line":22,"column":8,"nodeType":"39","messageId":"40","endLine":22,"endColumn":13},{"ruleId":"37","severity":1,"message":"42","line":27,"column":7,"nodeType":"39","messageId":"40","endLine":27,"endColumn":13},{"ruleId":"43","severity":1,"message":"44","line":51,"column":7,"nodeType":"45","endLine":51,"endColumn":24},{"ruleId":"37","severity":1,"message":"46","line":130,"column":7,"nodeType":"39","messageId":"40","endLine":130,"endColumn":21},{"ruleId":"43","severity":1,"message":"44","line":246,"column":7,"nodeType":"45","endLine":246,"endColumn":27},{"ruleId":"37","severity":1,"message":"47","line":251,"column":16,"nodeType":"39","messageId":"40","endLine":251,"endColumn":23},{"ruleId":"37","severity":1,"message":"48","line":450,"column":22,"nodeType":"39","messageId":"40","endLine":450,"endColumn":35},{"ruleId":"37","severity":1,"message":"49","line":451,"column":25,"nodeType":"39","messageId":"40","endLine":451,"endColumn":41},{"ruleId":"50","severity":1,"message":"51","line":586,"column":6,"nodeType":"52","endLine":586,"endColumn":21,"suggestions":"53"},{"ruleId":"54","severity":1,"message":"55","line":1,"column":1,"nodeType":"56","endLine":323,"endColumn":3},{"ruleId":"33","replacedBy":"57"},{"ruleId":"35","replacedBy":"58"},"no-native-reassign",["59"],"no-negated-in-lhs",["60"],"@typescript-eslint/no-unused-vars","'TF' is defined but never used.","Identifier","unusedVar","'tests' is defined but never used.","'pixels' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'imgToColumnSum' is assigned a value but never used.","'withImg' is defined but never used.","'setTileColSum' is assigned a value but never used.","'setTileColSumRdy' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useMemo has a missing dependency: 'tileColSum'. Either include it or remove the dependency array.","ArrayExpression",["61"],"import/no-anonymous-default-export","Assign array to a variable before exporting as module default","ExportDefaultDeclaration",["59"],["60"],"no-global-assign","no-unsafe-negation",{"desc":"62","fix":"63"},"Update the dependencies array to be: [tileColSum, tileColSumRdy]",{"range":"64","text":"65"},[16086,16101],"[tileColSum, tileColSumRdy]"]